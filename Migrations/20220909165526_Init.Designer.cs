// <auto-generated />
using CUGOJ.Admin_Server.Dao;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CUGOJ_Admin_Server.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220909165526_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("CUGOJ.Admin_Server.Dao.Auth", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("CoreId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Auths");
                });

            modelBuilder.Entity("CUGOJ.Admin_Server.Dao.Core", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Env")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LogPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MysqlPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Neo4jPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RabbitmqPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RedisPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TracePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cores");
                });

            modelBuilder.Entity("CUGOJ.Admin_Server.Dao.SysInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LogPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MysqlPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Neo4jPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RabbitmqPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RedisPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TracePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SysInfos");
                });

            modelBuilder.Entity("CUGOJ.Admin_Server.Dao.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
